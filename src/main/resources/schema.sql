drop table if exists users, items, bookings, requests, comments;

create table if not exists users (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL UNIQUE,
    CONSTRAINT pk_user PRIMARY KEY (id)
);
create table if not exists items (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(512) NOT NULL,
    is_available BOOL NOT NULL,
    owner_id BIGINT NOT NULL,
    request_id BIGINT,
    last_booking BIGINT,
    next_booking BIGINT,
    CONSTRAINT fk_owner FOREIGN KEY (owner_id) REFERENCES users (id) ON delete CASCADE

);

create table if not exists bookings (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    item_id BIGINT NOT NULL,
    booker_id BIGINT NOT NULL,
    status VARCHAR(255) NOT NULL,
    CONSTRAINT fk_booker FOREIGN KEY (booker_id) REFERENCES users (id) ON delete CASCADE
);

create table if not exists comments (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    text TEXT NOT NULL,
    item_id BIGINT NOT NULL,
    author_id BIGINT NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT pk_comment PRIMARY KEY (id),
    CONSTRAINT fk_item_comment FOREIGN KEY (item_id) REFERENCES items (id) ON delete CASCADE,
    CONSTRAINT fk_author FOREIGN KEY (author_id) REFERENCES users (id) ON delete CASCADE
);

create table if not exists requests (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description VARCHAR(255) NOT NULL,
    requester_id BIGINT NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT pk_request PRIMARY KEY (id),
    CONSTRAINT fk_requester FOREIGN KEY (requester_id) REFERENCES users (id) ON delete CASCADE
);

create table if not exists item_comments (
    item_id bigint not null,
    comment_id bigint not null,
    constraint ITEM_COMMENTS_PK primary key (item_id, comment_id),
    constraint ITEM_COMMENTS_FK_1 foreign key (item_id) references items (id),
    constraint ITEM_COMMENTS_FK_2 foreign key (comment_id) references comments (id)
);
create table if not exists item_bookings (
    item_id bigint not null,
    booking_id bigint not null,
    constraint ITEM_BOOKINGS_PK primary key (item_id, booking_id),
    constraint ITEM_BOOKINGS_FK_1 foreign key (item_id) references items (id),
    constraint ITEM_BOOKINGS_FK_2 foreign key (booking_id) references bookings (id)
);

